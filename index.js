// Generated by CoffeeScript 1.7.1
(function() {
  'use strict';
  var Pool, Promise, debug, r;

  Pool = require('generic-pool').Pool;

  r = require('rethinkdb');

  debug = require('debug')('rethinkdb:pool');

  Promise = require("" + __dirname + "/node_modules/rethinkdb/node_modules/bluebird");

  module.exports = function(options, max, min, idleTimeoutMillis, log) {
    var acquire, pool;
    pool = Pool({
      name: 'rethinkdb',
      create: function(done) {
        return r.connect(options, done);
      },
      destroy: function(connection) {
        return connection.close();
      },
      log: log || debug,
      max: max || 10,
      min: min || 2,
      idleTimeoutMillis: idleTimeoutMillis || 30000
    });
    acquire = Promise.promisify(pool.acquire);
    pool.r = r;
    pool.Promise = Promise;
    pool.run = function(query, done) {
      var promise;
      promise = acquire().then(query.run.bind(query)).then(function(cursorOrResult) {
        return (typeof cursorOrResult.toArray === "function" ? cursorOrResult.toArray() : void 0) || cursorOrResult;
      });
      if (done != null) {
        return promise.nodeify(done);
      } else {
        return promise;
      }
    };
    return pool;
  };

}).call(this);
